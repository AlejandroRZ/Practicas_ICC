/* -*- jde -*- */
/* <BaseDeDatosAgenda.java> */

package icc.practica7;
import icc.util.Buscador;
import icc.util.ManejadorDeLista;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
/**
 * Clase para representar una Base de Datos de agenda.
 *
 * Una base de datos debe ser capaz de obtener registros, y campos
 * de sus registros, y debe ser capaz de reconocer si un campo o registro
 * solicitado no existe, y dar una respuesta coherente.
 */
public class BaseDeDatosAgenda{ 

 /**
  * Este objeto llevara el control de los registros guardados en la lista.
  */
 private ManejadorDeLista tabla;
//Constructor para bases de datos vacías//
 public BaseDeDatosAgenda(){
 }
//Constructor que recibe manejador de lista//
  public BaseDeDatosAgenda(ManejadorDeLista m){
  tabla = m;
  }
  /**
  * Constructor.
  * @param datos Una cadena con el formato requerido por esta base
  *        con los registros de nombres, direcciones y telefonos.
  * @param tam_nombre tamaño del espacio asignado al nombre.
  * @param tam_direccion tamaño del espacio asignado a la direccion.
  * @param tam_telefono tamaño del espacio asignado al telefono.
  */
 public BaseDeDatosAgenda(String datos,
     int tam_nombre,
     int tam_direccion,
     int tam_telefono) {
       
     int tam_registro = tam_nombre + tam_direccion + tam_telefono;
     String regi = datos.substring(0,tam_registro);
     ManejadorDeLista alfred = new ManejadorDeLista();
   
     while(regi.length() <= datos.length()){
           String nomine = regi.substring(0, tam_nombre);
           String direc =  regi.substring(nomine.length(),  nomine.length() + tam_direccion);
           String telef =  regi.substring(nomine.length() + tam_direccion, regi.length());
           nomine.trim();
           direc.trim(); 
           telef.trim();
           int telefi = Integer.parseInt(telef);
           RegistroAgenda registroAgenda = new RegistroAgenda(nomine, direc, telefi);
           alfred.agrega(registroAgenda);
           if(regi.length() != datos.length()){
           datos = datos.substring(regi.length(), datos.length());
           regi = datos.substring(0,tam_registro);
           }else {break;}
     }tabla = alfred;
                    

 }
/**Metodo que añade directamente a la base
  * @param registro que se añadira**/
 public void añade(RegistroAgenda reg){
 tabla.agrega(reg);
 
 }
 
 /* @param nombre nombre contenido en el registro a buscar.
 * @return encontrado el registro que se buscaba.
 */
  public RegistroAgenda dameRegistroPorNombre (String nombre) {
          Buscador inspector = new BuscadorPorNombre(nombre);
        if(tabla != null){
        RegistroAgenda encontrado = (RegistroAgenda)tabla.encuentra(inspector);
        if(encontrado != null){
           return encontrado; 
        }else{return null;}
        }else{return null;}
        }
/* @param tel telefono contenido en el registro a buscar.
 * @return encontrado el registro que se buscaba.
 */
 
  public RegistroAgenda dameRegistroPorTelefono (int tel) {
        Buscador inspector = new BuscadorPorTelefono(tel);
       if(tabla != null){
       RegistroAgenda encontrado = (RegistroAgenda)tabla.encuentra(inspector);
       if(encontrado != null){
         return encontrado; 
       }else{return null;}
       }else{return null;}
 }
  
  /*@param cadena con el nombre del archivo*/
  public void guardaAgenda(String cadena){
      
  try(PrintStream fout = new PrintStream(cadena)){
  GuardaRegistro guardador = new GuardaRegistro(fout);
  tabla.encuentra(guardador);
  fout.close();
  }catch(FileNotFoundException filet){
    System.err.println("No se encontro el archivo " + cadena +
                       " y no pudo ser creado");  
  
  }catch(SecurityException se){
    System.err.println("No se tiene permiso de escribir en el archivo");
  
  }

     }
  
  
  public void llenaAgenda(String texto){
    try{BufferedReader brf = new BufferedReader(new FileReader(texto));
  do{
  tabla.agrega(RegistroAgenda.llenaRegistro(brf));
  
  }while(brf.readLine() != null);
  brf.close();
    }catch(FileNotFoundException e){
    System.err.println("No se encontro el archivo texto.txt");
    }catch(IOException ioe){
    System.err.println("Error al leer el contenido de texto.txt");
    }
  }

}
